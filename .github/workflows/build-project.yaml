name: Build Project

on:
  workflow_dispatch: {}
permissions:
  packages: write

jobs:
  mvn-build:
    uses: netcracker/qubership-workflow-hub/.github/workflows/maven-publish.yml@main
    with:
      maven-command: >
        --batch-mode clean install
      upload-artifact: true
      server-id: github
      java-version: 21
      artifact-id: ${{ github.event.repository.name }}
      ref: ${{ github.head_ref }}
    secrets:
      maven-token: ${{ secrets.GITHUB_TOKEN }}
  perform-version:
    runs-on: ubuntu-latest
    needs: mvn-build
    outputs:
      metadata: "${{ steps.metadata.outputs.result }}"
      tags: "${{ steps.prepare_tags.outputs.tags }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create name
        uses: netcracker/qubership-workflow-hub/actions/metadata-action@main
        id: metadata
        with:
          configuration-path: .github/metadata-action-config.yml

      - name: Echo metadata
        run: echo "Metadata result ${{ steps.metadata.outputs.result }}" >> $GITHUB_STEP_SUMMARY

      - name: Prepare tags
        id: prepare_tags
        run: |
          BASE_TAG="${{ steps.metadata.outputs.result }}"
          EXTRA_TAG="${{ github.event.inputs.tags }}"
          if [ -n "$EXTRA_TAG" ]; then
            TAGS="${BASE_TAG}, ${EXTRA_TAG}"
          else
            TAGS="${BASE_TAG}"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "tags: ${TAGS}" >> $GITHUB_STEP_SUMMARY
          echo "github.head_ref = ${{ github.head_ref }}"

      - name: Summary step
        run: |
          echo "**Metadata:** ${{ steps.metadata.outputs.result }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:** ${{ steps.prepare_tags.outputs.tags }}" >> $GITHUB_STEP_SUMMARY

  docker-build:
    name: "Build Docker Images"
    needs: perform-version
    runs-on: ubuntu-latest
    steps:
      - name: Docker
        uses: netcracker/qubership-workflow-hub/actions/docker-action@main
        with:
          ref: ${{ github.ref }}
          dry-run: ${{ inputs.dry-run }}
          download-artifact: true
          tags: ${{ needs.perform-version.outputs.tags }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

